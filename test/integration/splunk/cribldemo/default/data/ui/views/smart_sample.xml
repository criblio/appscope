<form hideFilters="true">
  <label>Smart Sampling</label>
  <fieldset submitButton="false" autoRun="true">
    <input type="time" token="field1" searchWhenChanged="true">
      <label></label>
      <default>
        <earliest>-5m@m</earliest>
        <latest>@m</latest>
      </default>
    </input>
  </fieldset>
  <row>
    <panel>
      <html>
        <p style="text-align: right">
        <span style="margin-top:15px; 
        padding: 6px; 
        border-radius; 2px;
        background-color: #1890FF"><a href="" id="sample_and_filter" class="pipeline-name" target="_blank" style="color: #fff; text-decoration: none">Cribl Pipeline: Sample and Filter</a></span> 
        </p>
      <p>Many data sources are a mixed bag of value. In fact, many data sources simply never make it into Splunk because they present a dubious value proposition, like firewall logs, netflow logs, or web access logs. They may contain messages you absolutely have to have, and some which are significantly less valuable. <b>Cribl's smart sampling enables you to finally bring in high volume, low value data sources.</b>
        </p>     
      <p>For all these sources, you need to see <i>some</i> of every type of message. You can't just keep errors. For example, looking at web access logs, we might want to know about all the errors but only keep some of the successes. Successes far outweigh the count of errors, but a success with a normal response time isn't particularly interesting. Smart sampling allows us to keep all the errors and keep a sample of the successes, so we can still get a view on performance, see all the things that went wrong, and in the end process and store significantly less data.</p>
      </html>
    </panel>
    <panel>
      <title>Original vs. Modified</title>
      <single>
        <search>
          <query>(index=cribl sourcetype=access_combined) OR (index=cribl-modified source=smart_sample sourcetype=access_combined)
|  eval len=len(_raw)
|  stats count(eval(searchmatch("index=cribl"))) as "Events IN" count(eval(searchmatch("index=cribl-modified"))) as "Events Out" sum(eval(if(searchmatch("index=cribl"), round(len/1024, 3), ''))) as "KB IN" sum(eval(if(searchmatch("index=cribl-modified"), round(len/1024, 3), ''))) as "KB OUT"</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="height">130</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x006d9c","0x006d9c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="showSparkline">1</option>
        <option name="showTrendIndicator">1</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <option name="trendColorInterpretation">standard</option>
        <option name="trendDisplayMode">absolute</option>
        <option name="unitPosition">after</option>
        <option name="useColors">1</option>
        <option name="useThousandSeparators">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <html>
      As we can see, we are processing and storing significantly less events and total data. Searches will run faster, and we can put our cluster to use for more use cases on the same hardware. We are sampling HTTP <code>200</code> statuses at a rate of 5 to 1. Knowing this, we can even estimate how many original events there were by multiplying event counts with status 200 by 5.
    </html>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Original vs. Sampled 5:1 (status=200)</title>
        <search>
          <query>(index=cribl sourcetype=access_combined) OR (index=cribl-modified source=smart_sample sourcetype=access_combined) | chart count over status by index</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">bar</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">none</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <single>
        <title>Volume Reduction</title>
        <search>
          <query>(index=cribl sourcetype=access_combined) OR (index=cribl-modified source=smart_sample sourcetype=access_combined) | eval len=len(_raw) | stats count as "Events" sum(eval(round(len/1024, 3))) as KB by index | autoregress KB | autoregress Events | eval Savings=100*(KB_p1-KB)/(KB_p1) | search Savings=* | fields Savings</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="numberPrecision">0.00</option>
        <option name="rangeColors">["0x53a051","0xf1813f","0xdc4e41","0x3c444d","0x3c444d"]</option>
        <option name="rangeValues">[100,200,300,400]</option>
        <option name="refresh.display">progressbar</option>
        <option name="unit">%</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Original vs. Estimated Original From Sample</title>
        <search>
          <query>(index=cribl sourcetype=access_combined) OR (index=cribl-modified source=smart_sample sourcetype=access_combined) 
| eval sampled=if(isnull(sampled), 1, sampled)
| stats sum(sampled) as count by status index 
| chart max(count) as count over status by index
          </query>          
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.chart">bar</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.legend.placement">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <html>
      Lastly, below is some example events. As you scroll through you'll see significantly less successes in the right hand events list.
    </html>
    </panel>
  </row>
  <row>
    <panel>
      <event>
        <title>Original</title>
        <search>
          <query>index=cribl-modified source=smart_sample sourcetype=access_combined | head 50</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="list.drilldown">none</option>
        <option name="raw.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="type">raw</option>
      </event>
    </panel>
    <panel>
      <event>
        <title>Sampled 5:1 (status=200)</title>
        <search>
          <query>index=cribl sourcetype=access_combined | head 50</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="list.drilldown">none</option>
        <option name="raw.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="type">raw</option>
      </event>
    </panel>
  </row>
</form>